suppressPackageStartupMessages(library(SingleR))
suppressPackageStartupMessages(library(SummarizedExperiment))
SingleR::data
dice <- DatabaseImmuneCellExpressionData()
msrnaseq <- MouseRNAseqData()
immgen <- ImmGenData()
monaco <- MonacoImmuneData()
blueprint <- BlueprintEncodeData()
hpca <- HumanPrimaryCellAtlasData()
hema <- NovershternHematopoieticData()
sumexprs <- list(dice = dice,
msrnaseq = msrnaseq,
immgen = immgen,
monaco = monaco,
blueprint = blueprint,
hpca = hpca,
hema = hema)
?as.data.frame
a <- matrix(1:20, nrow = 4)
rownames(a) <- c("a", "a", "b", "c")
a
b <- data.frame(a)
c <- as.data.frame(a)
b
a
b
c
b <- data.frame(a, check.rows = F)
b
b <- data.frame(a, check.names = F)
b
b <- data.frame(a, check.names = F, check.rows = F)
b
a
b <- data.frame(a, check.names = F, check.rows = F, row.names = NULL)
b
a
b
c
exprep <- function(sumexp_list){
require(tibble)
require(SummarizedExperiment)
require(dplyr)
exp_dat <- list()
sample_dat <- list()
for(i in names(sumexp_list)){
obj <- sumexp_list[[i]]
# Prep expression data
dat <- as.data.frame(assay(obj))
dat_colnames <- colnames(dat)
dat <- add_column(dat, Gene=rownames(dat), .after = 0)
exp_dat[[i]] <- dat
# Prep sample data
smpl <- as.data.frame(colData(obj))
smpl <- smpl %>%
add_column(short_name = rownames(smpl), .after = 0) %>%
rename(reference_cell_type = label.main,
long_name = label.fine) %>%
mutate(description = "N/A")
if(i == "dice") smpl$short_name <- make.names(smpl$short_name, unique = T)
sample_names <- smpl$short_name
sample_dat[[i]] <- smpl
if(sum(dat_colnames != sample_names) != 0) message(paste("Unmatched name. Check" ,i)) else message("all good")
}
sample_dat <<- sample_dat
exp_dat <<- exp_dat
}
exprep(sumexp_list = sumexprs)
rownames(dice)
colnames(dice)[1:100]
colnames(dice)[1:200]
rownames(colData(dice))[1:200]
a <- dice
assa <- assay(dice)
cola <- colData(dice)
cola <- as.data.frame(colData(dice))
colnames(cola)
rownames(cola)
colnames(assa)
sum(duplicated(colnames(assa)))
sum(make.names(colnames(assa), unique = T) != rownames(cola))
exprep <- function(sumexp_list){
require(tibble)
require(SummarizedExperiment)
require(dplyr)
exp_dat <- list()
sample_dat <- list()
for(i in names(sumexp_list)){
obj <- sumexp_list[[i]]
# Prep expression data
dat <- as.data.frame(assay(obj))
colnames(dat) <- make.names(colnames(dat), unique = T)
dat_colnames <- colnames(dat)
dat <- add_column(dat, Gene=rownames(dat), .after = 0)
exp_dat[[i]] <- dat
# Prep sample data
smpl <- as.data.frame(colData(obj))
smpl <- smpl %>%
add_column(short_name = rownames(smpl), .after = 0) %>%
rename(reference_cell_type = label.main,
long_name = label.fine) %>%
mutate(description = "N/A")
sample_names <- smpl$short_name
sample_dat[[i]] <- smpl
if(sum(dat_colnames != sample_names) != 0) message(paste("Unmatched name. Check" ,i)) else message("all good")
}
sample_dat <<- sample_dat
exp_dat <<- exp_dat
}
exprep(sumexp_list = sumexprs)
exprep <- function(sumexp_list){
require(tibble)
require(SummarizedExperiment)
require(dplyr)
exp_dat <- list()
sample_dat <- list()
for(i in names(sumexp_list)){
obj <- sumexp_list[[i]]
# Prep expression data
dat <- as.data.frame(assay(obj))
if(i == "dice") colnames(dat) <- make.names(colnames(dat), unique = T)
dat_colnames <- colnames(dat)
dat <- add_column(dat, Gene=rownames(dat), .after = 0)
exp_dat[[i]] <- dat
# Prep sample data
smpl <- as.data.frame(colData(obj))
smpl <- smpl %>%
add_column(short_name = rownames(smpl), .after = 0) %>%
rename(reference_cell_type = label.main,
long_name = label.fine) %>%
mutate(description = "N/A")
sample_names <- smpl$short_name
sample_dat[[i]] <- smpl
if(sum(dat_colnames != sample_names) != 0) message(paste("Unmatched name. Check" ,i)) else message("all good")
}
sample_dat <<- sample_dat
exp_dat <<- exp_dat
}
exprep(sumexp_list = sumexprs)
names(exp_dat)
savefun <- function(datlist, savename){
for(i in names(datlist)){
saveRDS(datlist[[i]], file = paste0(i, "_", savename, ".rds"))
}
}
savefun(exp_dat, savename = "expr")
savefun(sample_dat, savename = "samples")
sample(exp_dat$dice$Gene, 100)
sample(exp_dat[[1]]$Gene, 100)
sample(exp_dat[[2]]$Gene, 100)
sample(exp_dat[[3]]$Gene, 100)
sample(exp_dat[[4]]$Gene, 100)
sample(exp_dat[[5]]$Gene, 100)
sample(exp_dat[[6]]$Gene, 100)
sample(exp_dat[[7]]$Gene, 100)
write.csv(exp_dat$blueprint, file = "blueprint_exprs.csv")
write.csv(sample_dat$blueprint, file="blueprint_sample.csv")
write.csv(exp_dat$hpca, file = "hpca_expr.csv")
write.csv(sample_dat$hpca, file="hpca_sample.csv")
str(exp_dat$dice)
names(exp_dat)
str(exp_dat$blueprint)
tail(str(exp_dat$blueprint))
a <- str(exp_dat$blueprint)
rm(a)
write.csv(exp_dat$blueprint, file = "blueprint_exprs.csv", row.names = F)
write.csv(exp_dat$blueprint, file = "blueprint_exprs.csv", row.names = F)
write.csv(sample_dat$blueprint, file="blueprint_sample.csv", row.names = F)
write.csv(exp_dat$hpca, file = "hpca_expr.csv", row.names = F)
write.csv(sample_dat$hpca, file="hpca_sample.csv", row.names = F)
colnames(exp_dat$blueprint)[1:10]
colnames(sample_dat$blueprint)[1:10]
rm(cola, b, blueprint, hema, hpca, immgen, monaco, msrnaseq)
rm(assa, c, dice)
rm(sumexprs)
sample_dat$dice$reference_cell_type
levels(factor(sample_dat$dice$reference_cell_type))
levels(factor(sample_dat$dice$description)
suppressPackageStartupMessages(library(SingleR))
suppressPackageStartupMessages(library(SummarizedExperiment))
dice <- DatabaseImmuneCellExpressionData()
msrnaseq <- MouseRNAseqData()
immgen <- ImmGenData()
monaco <- MonacoImmuneData()
blueprint <- BlueprintEncodeData()
hpca <- HumanPrimaryCellAtlasData()
hema <- NovershternHematopoieticData()
sumexprs <- list(dice = dice,
msrnaseq = msrnaseq,
immgen = immgen,
monaco = monaco,
blueprint = blueprint,
hpca = hpca,
hema = hema)
exprep <- function(sumexp_list){
require(tibble)
require(SummarizedExperiment)
require(dplyr)
exp_dat <- list()
sample_dat <- list()
for(i in names(sumexp_list)){
obj <- sumexp_list[[i]]
# Prep expression data
dat <- as.data.frame(assay(obj))
if(i == "dice") colnames(dat) <- make.names(colnames(dat), unique = T)
dat_colnames <- colnames(dat)
dat <- add_column(dat, Gene=rownames(dat), .after = 0)
exp_dat[[i]] <- dat
# Prep sample data
smpl <- as.data.frame(colData(obj))
smpl <- smpl %>%
add_column(short_name = rownames(smpl), .after = 0) %>%
rename(reference_cell_type = label.main,
long_name = label.fine) %>%
mutate(description = "N/A")
sample_names <- smpl$short_name
smpl$reference_cell_type <- factor(smpl$reference_cell_type)
sample_dat[[i]] <- smpl
if(sum(dat_colnames != sample_names) != 0) message(paste("Unmatched name. Check" ,i)) else message("all good")
}
sample_dat <<- sample_dat
exp_dat <<- exp_dat
}
exprep(sumexp_list = sumexprs)
savefun <- function(datlist, savename){
for(i in names(datlist)){
saveRDS(datlist[[i]], file = paste0(i, "_", savename, ".rds"))
}
}
savefun(exp_dat, savename = "expr")
savefun(sample_dat, savename = "samples")
write.csv(exp_dat$blueprint, file = "blueprint_exprs.csv", row.names = F)
write.csv(sample_dat$blueprint, file="blueprint_sample.csv", row.names = F)
write.csv(exp_dat$hpca, file = "hpca_expr.csv", row.names = F)
rm(dice, hema, hpca, immgen, monaco, msrnaseq)
write.csv(sample_dat$hpca, file="hpca_sample.csv", row.names = F)
rm(blueprint, sumexprs)
helper <- function(datlist){
for(i in names(datlist)){
print(i)
levels(datlist[[i]]$reference_cell_type)
}
}
helper <- function(datlist){
for(i in names(datlist)){
print(i)
print(
levels(datlist[[i]]$reference_cell_type)
)
}
}
helper(sample_dat)
helper <- function(datlist){
for(i in names(datlist)){
message(i)
print(
levels(datlist[[i]]$reference_cell_type)
)
}
}
helper(sample_dat)
colnames(exp_dat$dice)
MouseRNAseqData()
?MouseRNAseqData()
dim(MouseRNAseqData())
immgen <- readRDS("../data/immgen.rds")
dim(immgen)
immgen_ann <- readRDS("../data/immgen_annot.rds")
levels(immgen_ann$reference_cell_type)
